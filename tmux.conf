set -g default-terminal "screen-256color"

# set VI shortcuts to tmux
setw -g mode-keys vi

# set Zsh as your default Tmux shell
# set-option -g default-shell /bin/zsh
#
# # UTF is great, let us use that
#set -g utf8
#set-window-option -g utf8 on
#
#
# # Tmux uses a 'control key', let's set it to 'Ctrl-a'
# # Reason: 'Ctrl-a' is easier to reach than 'Ctrl-b'
set -g prefix C-a
unbind C-b
#
# # command delay? We don't want that, make it short
set -sg escape-time 1

# Set the numbering of windows to go from 1 instead
# # of 0 - silly programmers :|
set-option -g base-index 1
setw -g pane-base-index 1
#
#
# # Allow us to reload our Tmux configuration while
# # using Tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"
#
# # Getting interesting now, we use the vertical and horizontal
# # symbols to split the screen
bind | split-window -h
bind - split-window -v
#

## Smart pane switching with awareness of Vim splits.
## # See: https://github.com/christoomey/vim-tmux-navigator
#
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# tmux powerline

set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/path/to/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/path/to/tmux-powerline/powerline.sh right)"
set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"

